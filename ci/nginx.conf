user  nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 4096;
    server_tokens off;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream app_backend {
        server 127.0.0.1:8080;
    }

    server {
        listen 80;
        server_name ai.throw.im;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name ai.throw.im;

        ssl_certificate     /etc/nginx/ssl/6db7b145441fac7c.crt;
        ssl_certificate_key /etc/nginx/ssl/generated-private-key.txt;
        ssl_session_timeout 1d;
        ssl_session_cache   shared:MozSSL:10m;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256';
        ssl_prefer_server_ciphers on;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        location / {
            proxy_pass http://app_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}
